{
  "aurRaaReactComponentStyle": {
    "prefix": "aRC",
    "body": [
      "import { FC,Fragment } from 'react'",
      "",
      "export interface ${1:${TM_FILENAME_BASE}}Props {}",
      "",
      "export const ${1:${TM_FILENAME_BASE}}:FC<${1:${TM_FILENAME_BASE}}Props> = (props) => {",
      "\treturn <Fragment></Fragment>",
      "}",
      ""
    ],
    "description": "AsurRaa React Components style with TypeScript."
  },
  "aurRaaReactPageStyle": {
    "prefix": "aRP",
    "body": [
      "import { Fragment } from 'react'",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn <Fragment></Fragment>",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "AsurRaa React Page style with TypeScript."
  },
  "asurraaReactGenerateCrudPageWithTable": {
    "prefix": "aRG",
    "body": [
      "import { Fragment } from 'react'",
      "import { Input, Tag } from 'antd';",
      "import { AsurRaaModal } from '@asurraa/sura-ui-modal';",
      "import { AsurRaaTable } from '@asurraa/sura-ui-table';",
      "import type { AsurRaaColumnsProps } from '@asurraa/sura-ui-table';",
      "import { SuraController, useDefaultFormState, useFormCreateOrEdit } from '@asurraa/sura-ui-hook-from';",
      "import { useSuraEditableData,useSuraModal,useSuraPage } from '@asurraa/sura-ui-hooks';",
      "import { useForm } from 'react-hook-form';",
      "//* need to change",
      "import {ProductCategoryServiceInterface,useProductCategoryService,} from '@src/services/product-category.service';",
      "//* need to change",
      "type PT = ProductCategoryServiceInterface;",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\tconst [page, setPage] = useSuraPage(1);",
      "\tconst [openModal, setOpenModal] = useSuraModal(false);",
      "\tconst { getAll, createOne, deleteOne, updateOne } = useProductCategoryService();",
      "\tconst { data, isLoading, refresh, meta } = getAll({page});",
      "\tconst [editableData, setEditableData] = useSuraEditableData<PT>(undefined);",
      "\tconst generateDefaultForm = useDefaultFormState(editableData);",
      "\tconst generateCreateOrEdit = useFormCreateOrEdit(editableData);",
      "\tconst { control, handleSubmit, reset } = useForm<PT>();",
      "",
      "\tconst onSubmitCreate = (data: PT) => {",
      "\t\tconst submitData: PT = data;",
      "\t\t // * Execute create service",
      "\t}",
      "",
      "\t",
      "\tconst onSubmitUpdate = (data: PT) => {",
      "\t\tconst submitData: PT = data;",
      "\t\t // * Execute edit service",
      "\t}",
      "\t",
      "\tconst columns: Array<AsurRaaColumnsProps<PT>> = [",
      "\t\t{",
      "\t\t\ttitle: 'Name',",
      "\t\t\tdataIndex: 'name',",
      "\t\t\tkey: 'name',",
      "\t\t\twidth: '100px',",
      "\t\t}",
      "\t]",
      "\t",
      "\tconst Modal = (",
      "\t    <AsurRaaModal",
      "\t      visible={openModal}",
      "\t      onCancel={() => {",
      "\t        reset();",
      "\t      setOpenModal(false);",
      "\t    }}",
      "\t    title={\"Create Product Category\"}",
      "\t    onOk={handleSubmit(generateCreateOrEdit(onSubmitCreate, onSubmitUpdate))}",
      "\t  >",
      "\t    <form style={{ margin: 10 }}>",
      "\t      <SuraController",
      "\t        titleHeader={\"Name\"}",
      "\t        name=\"name\"",
      "\t        control={control}",
      "\t        defaultValue={generateDefaultForm(\"name\")}",
      "\t        render={({ field }) => {",
      "\t          return (",
      "\t            <div>",
      "\t              <Input {...field} />",
      "\t            </div>",
      "\t          );",
      "\t        }}",
      "\t      />",
      "\t    </form>",
      "\t  </AsurRaaModal>",
      "\t);",
      "",
      "  return (",
      "    <Fragment>",
      "      {Modal}",
      "      <AsurRaaTable",
      "        antdTableProps={{",
      "          bordered: true,",
      "          loading: isLoading,",
      "          pagination: {",
      "            pageSize: 10,",
      "            total: meta?.totalItems,",
      "            current: page,",
      "            onChange: (page) => setPage(page),",
      "          },",
      "        }}",
      "        data={data}",
      "        asurRaaColumnProps={columns}",
      "        refreshButton={{",
      "          onClick: () => {",
      "            refresh();",
      "          },",
      "        }}",
      "        createButton={{",
      "          onClick: () => {",
      "            //* Create",
      "            setEditableData(undefined);",
      "            setOpenModal(true);",
      "          },",
      "        }}",
      "        editActionButton={(propsData) => ({",
      "          onClick: () => {",
      "            //* Perform update | Edit",
      "            setEditableData(propsData);",
      "            setOpenModal(true);",
      "          },",
      "        })}",
      "        deleteActionButton={(propsData) => ({",
      "          onOk: () => {",
      "            //*  Delete",
      "          },",
      "        })}",
      "        dataAllCSV={data}",
      "      />",
      "    </Fragment>",
      "  );",
      "};",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  }
}
